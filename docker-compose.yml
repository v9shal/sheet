  # ./docker-compose.yml
  services:
    frontend:
      build:
        context: ./frontend
        dockerfile: Dockerfile
      container_name: sheet-frontend
      ports:
        - "5173:5173"
      volumes:
        - ./frontend:/app
        - /app/node_modules
      env_file:
        - .env 
      networks:
        - app-network
      command: npm run dev
    backend:
      build:
        context: ./backend       
        dockerfile: Dockerfile   
        target: development    
      container_name: sheet-backend
      ports:
        - "3001:3000"
      volumes:
        - ./backend:/app
        - /app/node_modules
      env_file:
        - .env 
      environment:
        DATABASE_URL: mysql://${MYSQL_USER}:${MYSQL_PASSWORD}@mysql:3306/${MYSQL_DATABASE}
      depends_on:
        mysql:
          condition: service_healthy
      networks:
        - app-network
      command: npm start

    mysql:
      image: mysql:8.0 
      container_name: sheet-mysql
      env_file:
        - .env 
      environment:
        MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
        MYSQL_DATABASE: ${MYSQL_DATABASE}
        MYSQL_USER: ${MYSQL_USER}
        MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      ports:
        - "3310:3306"
      volumes:
        - mysql_data:/var/lib/mysql
      networks:
        - app-network
      healthcheck:
        test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u${MYSQL_USER}", "-p${MYSQL_PASSWORD}"]
        interval: 10s
        timeout: 5s
        retries: 5
        start_period: 30s 
      restart: unless-stopped

  networks:
    app-network:
      driver: bridge

  volumes:
    mysql_data: {} 